<?xml version="1.0" encoding="UTF-8"?>

<!--

Compilation and installation of all modules in the local repository:
  mvn clean install

Compilation and installation of all modules in the local repository, without running the tests nor generating Javadocs:
  mvn clean install -DskipTests -Dmaven.javadoc.skip

Compilation of selected modules, sign with the given key and deploy to Maven Central:
  mvn clean deploy -Prelease -Dgpg.keyname=5DA0DA74CADE10E6DDE646611983F53632921972

By using the maven-flatten-plugin, this pom.xml allows us to use properties to define
the versions of the artifacts: the properties will be replaced by their value in the deployed artifacts.
Moreover, this makes the parent pom useless, hence it is not deployed.
Note: submodules whose artifact must be deployed on Maven Central must activate the Nexus staging plugin
(see for instance the pom.xml of the io-takamaka-code submodule).

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>
    <io.takamaka.code.version>1.0.14</io.takamaka.code.version>
  </properties>

  <groupId>io.hotmoka</groupId>
  <artifactId>io-takamaka-code-parent</artifactId>
  <packaging>pom</packaging>
  <version>parent</version>
  <name>io-takamaka-code</name>
  <description>This project defines the support library of the Takamaka language for smart contracts.</description>
  <url>https://github.com/Hotmoka/io-takamaka-code</url>

  <organization>
    <url>https://www.hotmoka.io</url>
    <name>Hotmoka</name>
  </organization>

  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Fausto Spoto</name>
	  <email>fausto.spoto@hotmoka.io</email>
	  <organization>Hotmoka</organization>
	  <organizationUrl>https://www.hotmoka.io</organizationUrl>
	  <timezone>UTC+01:00</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/Hotmoka/io-takamaka-code.git</connection>
    <developerConnection>scm:git:git@github.com:Hotmoka/io-takamaka-code.git</developerConnection>
    <url>https://github.com/Hotmoka/io-takamaka-code</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <!-- specific profiles might add more modules to these -->
  <modules>
    <module>io-takamaka-code</module>
    <module>io-takamaka-code-constants</module>
  </modules>

  <!-- typical dependencies if submodules use JUnit 5 -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.9.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.3.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <includes>
            <include>*.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <skip>true</skip>   <!-- skip, since we are using nexus -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.5.0</version>
        <configuration>
          <flattenMode>oss</flattenMode>
        </configuration>
        <executions>
          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <!-- ensure proper cleanup -->
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
	<profile>
	  <id>release</id>
      <build>
        <plugins>
          <!-- the artifacts get signed -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- jars get sent to the remote repository -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.13</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>